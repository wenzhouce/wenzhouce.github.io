<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>活在梦里</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-02-07T18:35:48.824Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>活在梦里</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>智乃的相亲活动</title>
    <link href="http://example.com/2024/02/08/%E6%99%BA%E4%B9%83%E7%9A%84%E7%9B%B8%E4%BA%B2%E6%B4%BB%E5%8A%A8/"/>
    <id>http://example.com/2024/02/08/%E6%99%BA%E4%B9%83%E7%9A%84%E7%9B%B8%E4%BA%B2%E6%B4%BB%E5%8A%A8/</id>
    <published>2024-02-07T18:12:10.000Z</published>
    <updated>2024-02-07T18:35:48.824Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/67743/J">J-智乃的相亲活动_2024牛客寒假算法基础集训营3 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>智乃举办了一个相亲活动，她邀请了N位男嘉宾和M位女嘉宾，现在男女嘉宾之间存在K对双向的好感关系。<br>活动的第一步是选出若干位心动男&#x2F;女嘉宾，按照如下的方式进行。<br>每个人都首先自己各自独立的从自己有好感的异性中选出一个人，若某个人至少被一位异性选中，则ta成为心动男&#x2F;女嘉宾。<br>现在已知这K对双向的好感关系，若每个人选择异性的方式都为从自己有好感的异性中等概率随机选择，则心动男&#x2F;女嘉宾数目的期望分别是多少？</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.如果被选则期望=概率*1，不被选期望=概率*0，所以最后的结果应该是所有被选的概率的求和</span></span><br><span class="line"><span class="comment">2.一个男人被选的概率=1-所有女人都不选他的概率</span></span><br><span class="line"><span class="comment">3.因为女人不选这个男人的事件是相互独立的，所以p(i∩j)=p(i)*p(j)</span></span><br><span class="line"><span class="comment">4.考虑到N,M,K的范围是1e5，如果女人对男人不是双向的好感关系，不选他的概率是1所以可以忽略，那每个男人只要存所拥有好感的女人即可</span></span><br><span class="line"><span class="comment">5.因为题目中说不会出现重复的双向好感关系，所以一个女人不选男人的概率=(女人拥有好感的数目-1)/女人拥有好感的数目</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v[<span class="number">2</span>][N];</span><br><span class="line"><span class="type">int</span> a[N][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> numb[N];</span><br><span class="line"><span class="type">int</span> n,m,k;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;N;i++)numb[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        v[u][a[i][u]].<span class="built_in">push_back</span>(a[i][<span class="number">1</span>-u]);</span><br><span class="line">        numb[a[i][<span class="number">1</span>-u]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=(u==<span class="number">0</span>?n:m);i++)&#123;</span><br><span class="line">        <span class="type">double</span> x=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;v[u][i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="type">int</span> y=v[u][i][j];</span><br><span class="line">            x*=(numb[y]<span class="number">-1</span>)*<span class="number">1.0</span>/numb[y];</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=<span class="number">1</span>-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(u)cout&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">8</span>)&lt;&lt;ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;float\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)cin&gt;&gt;a[i][<span class="number">0</span>]&gt;&gt;a[i][<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">solve</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">solve</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/67743/J&quot;&gt;J-智乃的相亲活动_2024牛客寒假算法基础集训营3 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;</summary>
      
    
    
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="容斥原理" scheme="http://example.com/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>全体集合</title>
    <link href="http://example.com/2024/02/06/%E5%85%A8%E4%BD%93%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2024/02/06/%E5%85%A8%E4%BD%93%E9%9B%86%E5%90%88/</id>
    <published>2024-02-06T08:08:20.000Z</published>
    <updated>2024-02-06T08:14:34.422Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/232001">全体集合 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给出 n 个点 m 条边 的无向图，给出 k 个点，这 k 个点上每个点都有一个人，每个人每回合能走到一个相邻的节点（不能停留不走），问：有没有可能在某一个回合，让这些人都集中在一个点？</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">错误思路：一开始想得是把它构思成一棵树，找根节点到每个k节点的距离，如果都是奇或者都是偶则成立，否则不成立。没有考虑到它会形成一个环，所以不能构成一棵树</span></span><br><span class="line"><span class="comment">正确思路：</span></span><br><span class="line"><span class="comment">1.如果这张图是一张二分图，每个点都只能到另一个集合中去，则只有k个节点都在一个集合的条件下才能成立</span></span><br><span class="line"><span class="comment">2.如果这张图不能是一张二分图，则每个节点总能走到染色不了的位置上去，再回到原二分图中，使得每个节点都到一个集合中去</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">5</span>,inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> to[N&lt;&lt;<span class="number">1</span>],from[N&lt;&lt;<span class="number">1</span>],head[N],idx;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">    to[idx]=v,from[idx]=head[u],head[u]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> color[N],a[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    color[u]=c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=head[u];i!=<span class="number">-1</span>;i=from[i])&#123;</span><br><span class="line">        <span class="type">int</span> j=to[i];</span><br><span class="line">        <span class="keyword">if</span>(!color[j])&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">dfs</span>(j,<span class="number">3</span>-c))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(color[j]==c)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> u,v;</span><br><span class="line">        cin&gt;&gt;u&gt;&gt;v;</span><br><span class="line">        <span class="built_in">add</span>(u,v);</span><br><span class="line">        <span class="built_in">add</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a[color[x]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">1</span>]==k||a[<span class="number">2</span>]==k)cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/232001&quot;&gt;全体集合 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;</summary>
      
    
    
    
    
    <category term="图论" scheme="http://example.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="二分图" scheme="http://example.com/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Eliminate</title>
    <link href="http://example.com/2024/02/05/Eliminate/"/>
    <id>http://example.com/2024/02/05/Eliminate/</id>
    <published>2024-02-05T11:54:55.000Z</published>
    <updated>2024-02-05T12:16:55.988Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/contest/67742/F">F-Tokitsukaze and Eliminate (hard)_2024牛客寒假算法基础集训营2 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Tokitsukaze 正在玩一个消除游戏。</p><p> 初始有 n 个宝石从左到右排成一排，第 i 个宝石的颜色为 coli(1≤coli≤n)。Tokitsukaze 可以进行若干次以下操作：</p><p>任选一种颜色 x，将颜色为 x 的最右边那颗宝石、以及该宝石右边的所有宝石全部消除。 </p><p>Tokitsukaze 想知道至少需要几次操作才能把 n 个宝石全部消除。</p><p>第一行包含一个整数 T (1≤T≤2e5)，表示 T 组测试数据。保证 ∑n 不超过 2e5。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.解法一：递归，将每个点所能移到的最前面的位置记录，最后的时候从最后往前推</span></span><br><span class="line"><span class="comment">  1.1.两个相同颜色的点之间，该点所能移到的最前面的位置是从前一个点往后第一个该位置是该颜色在这后面位置之前的最后一个位置</span></span><br><span class="line"><span class="comment">  1.2.我们可以设一个数组b[i]来记录颜色i的最后一个位置</span></span><br><span class="line"><span class="comment">  1.3.设p点记录每个位置所能移最前的位置</span></span><br><span class="line"><span class="comment">  1.4.在两个颜色相同后面的点，它最差情况是移到后面这个颜色，最好的情况是移到前面这个颜色的后面一格</span></span><br><span class="line"><span class="comment">2.解法二：暴力，每一位都找它的前一位，如果前一位到头了erase掉，继续遍历直到所有的数都到头了或者遍历到第一个位置</span></span><br><span class="line"><span class="comment">  2.1.记录一个p表示当前所有颜色最后位置的下标最小的点，遍历过程中如果某个颜色的最后位置在这个点后面就继续往前推移，直到这个位置在p的左边</span></span><br><span class="line"><span class="comment">  2.2.每次找所有颜色的最后位置，更新p，ans++</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解法一</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> ne[N];</span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n,p=<span class="number">1</span>;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            b[a[i]]=i;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==a[p])&#123;</span><br><span class="line">                <span class="keyword">while</span>(p&lt;i)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(b[a[p]]==p)<span class="keyword">break</span>;</span><br><span class="line">                    ++p;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ne[i]=p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>,x=n;</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            x=ne[x]<span class="number">-1</span>;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解法二</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"><span class="type">int</span> ne[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">    ne[u]=v;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        v.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)b[i]=<span class="number">-1</span>,ne[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">            <span class="built_in">add</span>(i,b[a[i]]);</span><br><span class="line">            <span class="keyword">if</span>(b[a[i]]==<span class="number">-1</span>)v.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">            b[a[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> m=n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            m=<span class="built_in">min</span>(m,b[v[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(m!=<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="type">int</span> x=m;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                <span class="keyword">while</span>(b[v[i]]&gt;=m)b[v[i]]=ne[b[v[i]]];</span><br><span class="line">                <span class="keyword">if</span>(b[v[i]]==<span class="number">-1</span>)&#123;</span><br><span class="line">                    v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                x=<span class="built_in">min</span>(x,b[v[i]]);</span><br><span class="line">            &#125;</span><br><span class="line">            m=x;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/67742/F&quot;&gt;F-Tokitsukaze and Eliminate (hard)_2024牛客寒假算法基础集训营2 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="递归" scheme="http://example.com/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>法力无边</title>
    <link href="http://example.com/2024/02/05/%E6%B3%95%E5%8A%9B%E6%97%A0%E8%BE%B9/"/>
    <id>http://example.com/2024/02/05/%E6%B3%95%E5%8A%9B%E6%97%A0%E8%BE%B9/</id>
    <published>2024-02-04T17:53:41.000Z</published>
    <updated>2024-02-05T11:59:47.143Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/238811">法力无边 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><img src="/2024/02/05/%E6%B3%95%E5%8A%9B%E6%97%A0%E8%BE%B9/%E6%B3%95%E5%8A%9B%E6%97%A0%E8%BE%B9"></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a1 a1⊙a2 a1⊙a2⊙a3 ···</span></span><br><span class="line"><span class="comment">       a2     a2⊙a3 ···</span></span><br><span class="line"><span class="comment">                  a3 ···</span></span><br><span class="line"><span class="comment">1.因为所给n的范围为1e5，m为20，如果找每个区间O(n*n)超时，所以可以考虑用二进制考虑</span></span><br><span class="line"><span class="comment">2.因为二进制只能是0或者是1，我们每次加入一个值：</span></span><br><span class="line"><span class="comment">  2.1.如果该位置上的二进制是1，则同或前面的所有结果为1的值，结果依旧为1；同或所有结果为0的值结果依旧为0，所以对前面的值不变，而且增加了一个结果为1的组合</span></span><br><span class="line"><span class="comment">  2.2.如果该位置上的二进制是0，则同或前面的所有结果为1的值，结果变为0；同或所有结果为0的值结果变为1，所以前面所有的组合的结果值调换，而且增加了一个结果为0的组合</span></span><br><span class="line"><span class="comment">3.答案ans加上该位置所有组合的值ans+=b[1]*(1&lt;&lt;i);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;a[i];</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        b[<span class="number">1</span>]=(a[<span class="number">0</span>]&gt;&gt;i)&amp;<span class="number">1</span>,b[<span class="number">0</span>]=<span class="number">1</span>-b[<span class="number">1</span>];       <span class="comment">//分别记录i位置上同或成0/1的个数</span></span><br><span class="line">        ans+=b[<span class="number">1</span>]*(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((a[j]&gt;&gt;i)&amp;<span class="number">1</span>)b[<span class="number">1</span>]++;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">swap</span>(b[<span class="number">1</span>],b[<span class="number">0</span>]),b[<span class="number">0</span>]++;</span><br><span class="line">            ans+=b[<span class="number">1</span>]*(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/238811&quot;&gt;法力无边 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;</summary>
      
    
    
    
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="递归" scheme="http://example.com/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>小红数组操作</title>
    <link href="http://example.com/2024/02/04/%E5%B0%8F%E7%BA%A2%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2024/02/04/%E5%B0%8F%E7%BA%A2%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C/</id>
    <published>2024-02-04T15:12:49.000Z</published>
    <updated>2024-02-04T15:31:25.336Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/267787">小红数组操作 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>小红拿到了一个数组，初始数组为空，她希望你实现以下两种操作：</p><p>1.输入1 x y，将x插入在元素y的右边。保证此时数组中没有元素等于x，且数组中存在一个y。特殊的，如果将x插入在数组的最左边，则y&#x3D;0</p><p>2.输入2 x，将元素x删除。</p><p> 请你在所有操作后输出整个数组。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.q的范围是2e5，所以考虑先用离散化</span></span><br><span class="line"><span class="comment">2.插入操作add</span></span><br><span class="line"><span class="comment">3.删除操作pop</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Hash</span><span class="params">(<span class="type">int</span> X)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(X==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x=X;</span><br><span class="line">    x%=N;</span><br><span class="line">    <span class="keyword">while</span>((a[x]&amp;&amp;a[x]!=X)||x==<span class="number">0</span>)&#123;</span><br><span class="line">        x++;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=N)x%=N;</span><br><span class="line">    &#125;</span><br><span class="line">    a[x]=X;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ne[N],pre[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    pre[ne[y]]=x,ne[x]=ne[y];</span><br><span class="line">    ne[y]=x,pre[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pop</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    ne[pre[x]]=ne[x];</span><br><span class="line">    pre[ne[x]]=pre[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> q,ans=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> a,b,c;</span><br><span class="line">        cin&gt;&gt;a;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">1</span>)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            cin&gt;&gt;b&gt;&gt;c;</span><br><span class="line">            b=<span class="built_in">Hash</span>(b);</span><br><span class="line">            c=<span class="built_in">Hash</span>(c);</span><br><span class="line">            <span class="built_in">add</span>(b,c);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans--;</span><br><span class="line">            cin&gt;&gt;b;</span><br><span class="line">            b=<span class="built_in">Hash</span>(b);</span><br><span class="line">            <span class="built_in">pop</span>(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> root=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(ne[root]!=<span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;a[ne[root]];</span><br><span class="line">        root=ne[root];</span><br><span class="line">        <span class="keyword">if</span>(ne[root]!=<span class="number">0</span>)cout&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/267787&quot;&gt;小红数组操作 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目</summary>
      
    
    
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="单链表" scheme="http://example.com/tags/%E5%8D%95%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>FEB</title>
    <link href="http://example.com/2024/02/03/FEB/"/>
    <id>http://example.com/2024/02/03/FEB/</id>
    <published>2024-02-03T11:36:29.000Z</published>
    <updated>2024-02-03T11:43:05.202Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/4996/">4993. FEB - AcWing题库</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>有一个长度为 N 的字符串 S，其中的每个字符要么是 <code>B</code>，要么是 <code>E</code>。</p><p>我们规定 S 的价值等于其中包含的子串 <code>BB</code> 以及子串 <code>EE</code> 的数量之和。</p><p>例如，<code>BBBEEE</code> 中包含 2 个 <code>BB</code> 以及 22个 <code>EE</code>，所以 <code>BBBEEE</code> 的价值等于 4。</p><p>我们想要计算 S 的价值，不幸的是，在我们得到 S 之前，约翰将其中的一些字符改为了 <code>F</code>。</p><p>目前，我们只能看到<strong>改动后</strong>的字符串 S，对于其中的每个 <code>F</code>，我们并不清楚它之前是 <code>B</code> 还是 <code>E</code>。</p><p>请你计算，<strong>改动前</strong>的 S 有多少种可能的价值并将所有可能价值全部输出。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分类讨论以下几种情况：</span></span><br><span class="line"><span class="comment">情况1：xxxxxx  0，1，2，···，k-1</span></span><br><span class="line"><span class="comment">情况2：0xxxxx  0，1，2，···，k</span></span><br><span class="line"><span class="comment">情况3：0xxxx1  k+1，k-1，k-3，···，0</span></span><br><span class="line"><span class="comment">情况4：0xxxx0  k，k-2，k-4，···，0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.如果给的字符串中没有前后缀的F，则等差公式应该是2；如过有，则等差公式应该是1</span></span><br><span class="line"><span class="comment">2.然后算出中间段的最大值和最小值</span></span><br><span class="line"><span class="comment">3.中间段的最大值加上前后缀F所能改动的最大值，从最小值加上等差到最大值</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[l]==<span class="string">&#x27;F&#x27;</span>)l++;</span><br><span class="line">    <span class="keyword">while</span>(s[r]==<span class="string">&#x27;F&#x27;</span>)r--;</span><br><span class="line">    <span class="keyword">if</span>(l==n)&#123;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cout&lt;&lt;i&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> low=<span class="number">0</span>,high=<span class="number">0</span>;</span><br><span class="line">        string str=s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=l+<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;F&#x27;</span>)str[i]=str[i<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">if</span>(str[i]==str[i<span class="number">-1</span>])high++;</span><br><span class="line">        &#125;</span><br><span class="line">        str=s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=l+<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;F&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i<span class="number">-1</span>]==<span class="string">&#x27;E&#x27;</span>)str[i]=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                <span class="keyword">else</span> str[i]=<span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==str[i<span class="number">-1</span>])low++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> d=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l==<span class="number">0</span>&amp;&amp;r==n<span class="number">-1</span>)d=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> high+=n<span class="number">-1</span>-r+l;</span><br><span class="line">        cout&lt;&lt;(high-low)/d+<span class="number">1</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=low;i&lt;=high;i+=d)cout&lt;&lt;i&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/4996/&quot;&gt;4993. FEB - AcWing题库&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题</summary>
      
    
    
    
    
    <category term="字符串" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="分类讨论" scheme="http://example.com/tags/%E5%88%86%E7%B1%BB%E8%AE%A8%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Devu和鲜花</title>
    <link href="http://example.com/2024/02/03/Devu%E5%92%8C%E9%B2%9C%E8%8A%B1/"/>
    <id>http://example.com/2024/02/03/Devu%E5%92%8C%E9%B2%9C%E8%8A%B1/</id>
    <published>2024-02-03T05:37:32.000Z</published>
    <updated>2024-02-03T11:38:08.524Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/216/">214. Devu和鲜花 - AcWing题库</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>Devu 有 N 个盒子，第 i 个盒子中有 Ai 枝花。</p><p>同一个盒子内的花颜色相同，不同盒子内的花颜色不同。</p><p>Devu 要从这些盒子中选出 M 枝花组成一束，求共有多少种方案。</p><p>若两束花每种颜色的花的数量都相同，则认为这两束花是相同的方案。</p><p>结果需对 1e9+7 取模之后方可输出。</p><p>1≤N≤20，0≤M≤1e14，0≤Ai≤1e12</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">隔板法：N的范围很小，M的范围很大，那么可以考虑用隔板法，在M+N-1个格子里插入N-1个隔板，即将M分成N类</span></span><br><span class="line"><span class="comment">容斥原理：因为每个盒子不是无数枝花，所以可以考虑用全部的排法-不满足条件的排法</span></span><br><span class="line"><span class="comment">1.全部的排法即C(M+N-1,N-1)</span></span><br><span class="line"><span class="comment">2.不满足的排法=(S1∪S2…∪SN)</span></span><br><span class="line"><span class="comment">3.Si表示所选的排法中这种花的数量超过了盒子中花的总数，那可知至少取了xi+1枝花，那么隔板法就应该变为从M+N-1-(xi+1)中插入N-1个隔板，即C(M+N-1-xi-1,N-1)</span></span><br><span class="line"><span class="comment">4.根据容斥原理奇数个加，偶数个减，就可以得到不满足的排法的总数</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> p[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;b)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> d=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a;i&gt;a-b;i--)d=i%mod*d%mod;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;p[i];</span><br><span class="line">    <span class="type">int</span> d=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)d=d*i%mod;</span><br><span class="line">    d=<span class="built_in">qmi</span>(d,mod<span class="number">-2</span>);</span><br><span class="line">    <span class="type">int</span> ans=d*<span class="built_in">C</span>(m+n<span class="number">-1</span>,n<span class="number">-1</span>)%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)&#123;</span><br><span class="line">        <span class="type">int</span> x=m+n<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> y=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                y*=<span class="number">-1</span>;</span><br><span class="line">                x-=p[j]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=(ans+<span class="built_in">C</span>(x,n<span class="number">-1</span>)*d%mod*y)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;(ans+mod)%mod;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/216/&quot;&gt;214. Devu和鲜花 - AcWing题库&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="容斥原理" scheme="http://example.com/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/"/>
    
    <category term="排列组合" scheme="http://example.com/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/"/>
    
    <category term="隔板法" scheme="http://example.com/tags/%E9%9A%94%E6%9D%BF%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>能被整除的数</title>
    <link href="http://example.com/2024/02/02/%E8%83%BD%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0/"/>
    <id>http://example.com/2024/02/02/%E8%83%BD%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0/</id>
    <published>2024-02-02T13:30:28.000Z</published>
    <updated>2024-02-03T11:38:56.170Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/892/">890. 能被整除的数 - AcWing题库</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个整数 n 和 m 个不同的质数 p1,p2,…,pm。</p><p>请你求出 1∼n 中能被 p1,p2,…,pm 中的至少一个数整除的整数有多少个。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><img src="/2024/02/02/%E8%83%BD%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0/容斥原理.png" alt="容斥原理"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.首先，1~n中能被p整除的数字的个数为n/p下取整，能被整除的数字分别为p,2p,3p...kp</span></span><br><span class="line"><span class="comment">2.根据容斥原理，答案=能被一个p整除的数字个数-能被两个p整除的数字个数...，即加上奇数个，减去偶数个</span></span><br><span class="line"><span class="comment">3.如果某几个p的乘积大于n，则1~n中没有能被这个乘积整除的因子，直接退出</span></span><br><span class="line"><span class="comment">4.因为题目所给的m最大为16，只要小于27用二进制表示都不会超时，那么二进制1代表用这个质数，0代表不用，就可以以此罗列所有的搭配</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">int</span> p[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)cin&gt;&gt;p[i];</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">        <span class="type">int</span> x=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i&gt;&gt;j)&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                x*=p[j];</span><br><span class="line">                <span class="keyword">if</span>(x&gt;n)&#123;</span><br><span class="line">                    x=<span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">-1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(__builtin_popcount(i)%<span class="number">2</span>)ans+=n/x;</span><br><span class="line">        <span class="keyword">else</span> ans-=n/x;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/892/&quot;&gt;890. 能被整除的数 - AcWing题库&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="容斥原理" scheme="http://example.com/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/"/>
    
    <category term="模板" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>数学考试</title>
    <link href="http://example.com/2024/02/02/%E6%95%B0%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    <id>http://example.com/2024/02/02/%E6%95%B0%E5%AD%A6%E8%80%83%E8%AF%95/</id>
    <published>2024-02-02T08:50:42.000Z</published>
    <updated>2024-02-02T09:49:57.839Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/238810">数学考试 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>特训练习共 n 道题，第 i 题的难度为 ai，分值为 bi。为了更好提高自己的数学水平，牛妹决定按照题目顺序做题。做完第 i 题后，牛妹可以选择保持自己的压力指数 P 不变、使 P 增加 Qi 或使 P 减少 Wi。压力指数上限为 K，下限为 0。当牛妹在压力为 P 的状态下完成第 i 题时，可以积累 ai×P 的经验。但压力太大会反噬牛妹，当 P&gt;bi 时，牛妹不能做对第 i 题，无法积累任何经验。请注意，无论是否做对，都算作完成了第 i 题，在做完后，才更改压力值。牛妹想要知道，完成本次数学特训后，她最多可以积累多少经验。牛妹初始的压力值可以由牛妹在 0−K 范围内自由选定。请注意，本题的空间限制较为特别，仅有 64MB。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.定义问题和状态</span></span><br><span class="line"><span class="comment">  1.1.n表示题目数量</span></span><br><span class="line"><span class="comment">  1.2.k表示压力容量</span></span><br><span class="line"><span class="comment">  1.3.dp[2][N]是一个二维数组，其中dp[i%2][j]表示考虑前i个题目，当前压力容量为j时能够获得的最大经验</span></span><br><span class="line"><span class="comment">2.状态转移方程</span></span><br><span class="line"><span class="comment">  2.1.对于每题i，更新i+1的值</span></span><br><span class="line"><span class="comment">  2.2.如果当前压力j不大于b，则其经验a*j可以被加入当前经验</span></span><br><span class="line"><span class="comment">  2.3.因为W和Q的范围都是1—K，所以更新i+1的时候要判断三种情况：</span></span><br><span class="line"><span class="comment">      2.3.1.选择保持自己的压力P不变，则dp[i+1][j]应该与dp[i][j]判断谁的经验更多</span></span><br><span class="line"><span class="comment">      2.3.2.选择增加Q，增加Q以后若不超过K，更新dp[i+1][j+Q]</span></span><br><span class="line"><span class="comment">      2.3.3.选择减少W，减少W以后若不小于0，更新dp[i+1][j-W]</span></span><br><span class="line"><span class="comment">3.最终结果</span></span><br><span class="line"><span class="comment">  遍历dp[(n+1)&amp;1][...]数组，找出最大的经验，相当于考虑所有物品之后，背包最大容量为k的最大价值</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">2</span>][N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> a,b,q,w;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;q&gt;&gt;w;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=k;j++)&#123;</span><br><span class="line">            <span class="type">int</span> x=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(j&lt;=b)x=a*j;</span><br><span class="line">            dp[(i+<span class="number">1</span>)&amp;<span class="number">1</span>][j]=<span class="built_in">max</span>(dp[(i+<span class="number">1</span>)&amp;<span class="number">1</span>][j],dp[i&amp;<span class="number">1</span>][j]+x);</span><br><span class="line">            <span class="keyword">if</span>(j-w&gt;=<span class="number">0</span>)dp[(i+<span class="number">1</span>)&amp;<span class="number">1</span>][j-w]=<span class="built_in">max</span>(dp[(i+<span class="number">1</span>)&amp;<span class="number">1</span>][j-w],dp[i&amp;<span class="number">1</span>][j]+x);</span><br><span class="line">            <span class="keyword">if</span>(j+q&lt;=k)dp[(i+<span class="number">1</span>)&amp;<span class="number">1</span>][j+q]=<span class="built_in">max</span>(dp[(i+<span class="number">1</span>)&amp;<span class="number">1</span>][j+q],dp[i&amp;<span class="number">1</span>][j]+x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,dp[(n+<span class="number">1</span>)&amp;<span class="number">1</span>][i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/238810&quot;&gt;数学考试 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;</summary>
      
    
    
    
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="背包问题" scheme="http://example.com/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>小红叒战小紫</title>
    <link href="http://example.com/2024/02/01/%E5%B0%8F%E7%BA%A2%E5%8F%92%E6%88%98%E5%B0%8F%E7%B4%AB/"/>
    <id>http://example.com/2024/02/01/%E5%B0%8F%E7%BA%A2%E5%8F%92%E6%88%98%E5%B0%8F%E7%B4%AB/</id>
    <published>2024-02-01T12:03:42.000Z</published>
    <updated>2024-02-03T11:39:40.604Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/267147">小红叒战小紫 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>小红这天又和小紫发起了一场对战。对战的规则如下：<br> 两人各有一些怪兽卡。每回合两人随机的从自己当前存活的怪兽卡中抽取一张发起决斗，战斗力低的怪兽卡死亡。如果两张怪兽卡战斗力相同，则无事发生。<br> 游戏会进行到“如果抽卡，则 100% 的概率无事发生”或者“有一方卡牌被用完”时结束。请你计算小红和小紫游戏进行回合数的期望。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">战斗力为2的肯定死不掉，所以这题主要看抽出战斗力为1的概率</span></span><br><span class="line"><span class="comment">1.先记录小红和小紫所各自拥有的战斗力为1和2的数量，如果都是2或者都是1那就输出0</span></span><br><span class="line"><span class="comment">2.设dp[i][j]，代表小红拥有i张，小紫拥有j张的时候回合数的期望</span></span><br><span class="line"><span class="comment">3.设p为小红从i张战斗力为1的牌+a2张战斗力为2的牌中取出1，小紫从j张战斗力为1的牌+b2张战斗力为2的牌中取出2的概率</span></span><br><span class="line"><span class="comment">4.设q为小红从i张战斗力为1的牌+a2张战斗力为2的牌中取出2，小紫从j张战斗力为1的牌+b2张战斗力为2的牌中取出1的概率</span></span><br><span class="line"><span class="comment">5.都抽到1的概率和都抽到2的话牌数不变，所以回合数概率=(1-p-q)*dp[i][j]，所以dp[i][j]=p*dp[i-1][j]+q*dp[i][j-1]+(1-p-q)*dp[i][j]+1，因为抽了一次所以最后+1</span></span><br><span class="line"><span class="comment">6.换算一下就是dp[i][j]=(p*dp[i-1][j]+q*dp[i][j-1]+1)/(p+q)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">55</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>],b[<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> dp[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>,b=mod<span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n,m,x;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        a[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        b[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((!a[<span class="number">1</span>]&amp;&amp;!b[<span class="number">1</span>])||(!a[<span class="number">2</span>]&amp;&amp;!b[<span class="number">2</span>]))&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="comment">//小红抽到1，小紫抽到2的概率</span></span><br><span class="line">            <span class="type">int</span> p1=(i*<span class="built_in">qmi</span>(i+a[<span class="number">2</span>])%mod)*(b[<span class="number">2</span>]*<span class="built_in">qmi</span>(j+b[<span class="number">2</span>])%mod)%mod;</span><br><span class="line">            <span class="comment">//小红抽到2，小紫抽到1的概率</span></span><br><span class="line">            <span class="type">int</span> p2=(a[<span class="number">2</span>]*<span class="built_in">qmi</span>(i+a[<span class="number">2</span>])%mod)*(j*<span class="built_in">qmi</span>(j+b[<span class="number">2</span>])%mod)%mod;</span><br><span class="line">            dp[i][j]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i)dp[i][j]+=p1*dp[i<span class="number">-1</span>][j]%mod;</span><br><span class="line">            <span class="keyword">if</span>(j)dp[i][j]+=p2*dp[i][j<span class="number">-1</span>]%mod;</span><br><span class="line">            dp[i][j]=dp[i][j]*<span class="built_in">qmi</span>(p1+p2)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[a[<span class="number">1</span>]][b[<span class="number">1</span>]];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/267147&quot;&gt;小红叒战小紫 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目</summary>
      
    
    
    
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="概率DP" scheme="http://example.com/tags/%E6%A6%82%E7%8E%87DP/"/>
    
  </entry>
  
  <entry>
    <title>一道难题</title>
    <link href="http://example.com/2024/02/01/%E4%B8%80%E9%81%93%E9%9A%BE%E9%A2%98/"/>
    <id>http://example.com/2024/02/01/%E4%B8%80%E9%81%93%E9%9A%BE%E9%A2%98/</id>
    <published>2024-02-01T06:53:26.000Z</published>
    <updated>2024-02-01T12:01:51.616Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/240153">一道难题 (nowcoder.com)</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个数字 n，求出 1−n 中 只由 0 或 1 组成的，且至少有三个 1 相连的数（不含前导零）有多少个。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">dp[i][0] 第i位为0的情况</span></span><br><span class="line"><span class="comment">dp[i][1] 第i-1位为0，第i位为1的情况</span></span><br><span class="line"><span class="comment">dp[i][2] 第i-2位为0，连续两个1的情况</span></span><br><span class="line"><span class="comment">dp[i][3] 已满足连续3个1的情况</span></span><br><span class="line"><span class="comment">如果连续的1等于3了，那么第i位就可以变成0，也就是说可满足的情况*2</span></span><br><span class="line"><span class="comment">dp[i][3]=dp[i-1][2]+dp[i-1][3]*2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">主要的问题还是要确保数的大小要不超过n，这里可以将临界值进行判断：</span></span><br><span class="line"><span class="comment">1.如果遍历到一个大于1的点，那么前面保持不变，只要后面找到满足连续3的所有情况</span></span><br><span class="line"><span class="comment">2.如果先遍历到连续的3个1，也是前面保持不变，只要后面的数不超过n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">从头开始遍历：</span></span><br><span class="line"><span class="comment">1.如果连续3个1，那么我们只要找到后面可以满足小于n，不用管后面满不满足连续3个1的所有情况：</span></span><br><span class="line"><span class="comment">  1.1.如果s[i]&gt;&#x27;1&#x27;，以i为起点后面不论是连续0个1还是连续3个1的情况都可以，所以ans+=dp[n-i+1][j]，j=1，2，3</span></span><br><span class="line"><span class="comment">  1.2.如果s[i]==&#x27;1&#x27;，那么就有两种情况，一种是1变成0，那么后面就有1&lt;&lt;(n-i)种情况；另一种是1不变，那么后面我们又要找以i开头可满足的所有小于n的情况，也是不用考虑有无连续3个1</span></span><br><span class="line"><span class="comment">  1.3.如果s[i]==&#x27;0&#x27;，这个位就不能变，所以跳过</span></span><br><span class="line"><span class="comment">  每次遍历的位置不存在也是一种情况所以返回的时候ans+1</span></span><br><span class="line"><span class="comment">2.如果s[i]&gt;&#x27;1&#x27;，那么只要找到n-i+1这么长情况下所有的可满足的情况即dp[n-i+1][3]；如果前面已经有连续j个1，j一定小于3，那么我们也可以找n-i+1长情况下满足补充剩下1的情况即dp[n-i+1][3-j]</span></span><br><span class="line"><span class="comment">  这里要找的是长度等于n的所有情况，一种情况是连续3个1在i位置上，则前面要么有连续1个1或连续2个1，另一种情况是连续3个1在i位置后面</span></span><br><span class="line"><span class="comment">3.如果s[i]==&#x27;1&#x27;，找出所有长度小于等于n-i的满足存在3个连续1的情况即dp[n-i][3]，唯一能解释不重复的是如果遇到了两个重复的排序，则前一个排序，而且这个加完的数是不超过n的所以是满足条件的</span></span><br><span class="line"><span class="comment">4.如果s[i]==&#x27;0&#x27;，跳过，并且记录连续1的cnt也重置</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">30</span>;</span><br><span class="line"><span class="type">int</span> a[N],n;</span><br><span class="line"><span class="type">int</span> dp[N][<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">3</span>;j++)&#123;</span><br><span class="line">                ans+=dp[n-i+<span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            ans+=(<span class="number">1</span>&lt;&lt;(n-i))+<span class="built_in">dfs</span>(i+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    n=s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)a[i+<span class="number">1</span>]=s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">        dp[i][<span class="number">0</span>]=dp[i<span class="number">-1</span>][<span class="number">0</span>]+dp[i<span class="number">-1</span>][<span class="number">1</span>]+dp[i<span class="number">-1</span>][<span class="number">2</span>];</span><br><span class="line">        dp[i][<span class="number">1</span>]=dp[i<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        dp[i][<span class="number">2</span>]=dp[i<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">        dp[i][<span class="number">3</span>]=dp[i<span class="number">-1</span>][<span class="number">2</span>]+dp[i<span class="number">-1</span>][<span class="number">3</span>]*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt==<span class="number">3</span>)&#123;</span><br><span class="line">            ans+=<span class="built_in">dfs</span>(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=cnt;j++)&#123;</span><br><span class="line">                ans+=dp[n-i+<span class="number">1</span>][<span class="number">3</span>-j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            ans+=dp[n-i][<span class="number">3</span>];</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;<span class="keyword">else</span> cnt=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/240153&quot;&gt;一道难题 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;</summary>
      
    
    
    
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="搜索" scheme="http://example.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>筛法求欧拉函数</title>
    <link href="http://example.com/2024/01/31/%E7%AD%9B%E6%B3%95%E6%B1%82%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2024/01/31/%E7%AD%9B%E6%B3%95%E6%B1%82%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/</id>
    <published>2024-01-31T15:01:07.000Z</published>
    <updated>2024-02-02T14:16:31.644Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/876/">874. 筛法求欧拉函数 - AcWing题库</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个正整数 n，求 1∼n 中每个数的欧拉函数之和。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><img src="/2024/01/31/%E7%AD%9B%E6%B3%95%E6%B1%82%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/欧拉函数.webp" alt="欧拉函数" style="zoom: 80%;"><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> phi[N];</span><br><span class="line"><span class="type">int</span> pre[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_eulers</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> tot=<span class="number">0</span>;</span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!phi[i])&#123;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">            pre[++tot]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=tot;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pre[j]*i&gt;n)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%pre[j]==<span class="number">0</span>)&#123;</span><br><span class="line">                phi[i*pre[j]]=phi[i]*pre[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> phi[i*pre[j]]=phi[i]*(pre[j]<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">get_eulers</span>(n);</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans+=phi[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/876/&quot;&gt;874. 筛法求欧拉函数 - AcWing题库&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="欧拉函数" scheme="http://example.com/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
    <category term="模板" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
</feed>
